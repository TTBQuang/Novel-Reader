name: Novel Reader CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: novel_reader_test
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:7.0
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build and Test Backend
      working-directory: ./backend
      env:
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/novel_reader_test?useSSL=false&allowPublicKeyRetrieval=true
        SPRING_DATASOURCE_USERNAME: test_user
        SPRING_DATASOURCE_PASSWORD: test_password
        SPRING_DATA_REDIS_HOST: localhost
        SPRING_DATA_REDIS_PORT: 6379
        JWT_SECRET_KEY: test_secret_key
        SPRING_MAIL_USERNAME: test@example.com
        SPRING_MAIL_PASSWORD: test_password
        FIREBASE_APPLICATION_CREDENTIALS: dummy-credentials.json
      run: |
        echo '{"type": "service_account"}' > dummy-credentials.json
        mvn clean verify

    - name: Upload Backend Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: backend-test-results
        path: backend/target/surefire-reports/
        retention-days: 5

  docker:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/novel-reader-backend:latest ./backend

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/novel-reader-backend:latest

  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Lint Frontend
      working-directory: ./frontend
      run: npm run lint

    - name: Build Frontend
      working-directory: ./frontend
      env:
        VITE_API_URL: http://localhost:5173
        VITE_FIREBASE_API_KEY: dummy-key
        VITE_FIREBASE_AUTH_DOMAIN: dummy.firebaseapp.com
        VITE_FIREBASE_PROJECT_ID: dummy-project
        VITE_FIREBASE_STORAGE_BUCKET: dummy-bucket
        VITE_FIREBASE_MESSAGING_SENDER_ID: "123456"
        VITE_FIREBASE_APP_ID: dummy-app-id
        VITE_FIREBASE_MEASUREMENT_ID: dummy-measurement-id
        VITE_GOOGLE_CLIENT_ID: dummy-client-id
      run: npm run build
